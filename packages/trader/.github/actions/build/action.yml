name: build
description: Build all packages
inputs:
  REF_NAME:
    description: 'Git ref name'
    required: true
    default: 'test'
  NODE_ENV:
    description: 'Node environment'
    required: false
    default: 'test'
  # DATADOG_CLIENT_TOKEN:
  #   description: 'Datadog client token'
  #   required: false
  # DATADOG_APPLICATION_ID:
  #   description: 'Datadog application id'
  #   required: false
  # DATADOG_CLIENT_TOKEN_LOGS:
  #   description: 'Datadog client token for logs'
  #   required: false
  # DATADOG_SESSION_REPLAY_SAMPLE_RATE:
  #   description: 'Datadog session replay sample rate'
  #   required: false
  # DATADOG_SESSION_SAMPLE_RATE:
  #   description: 'Datadog session sample rate'
  #   required: false
  # DATADOG_SESSION_SAMPLE_RATE_LOGS:
  #   description: 'Datadog session sample rate for logs'
  #   required: false
  RUDDERSTACK_KEY:
    description: 'Rudderstack key'
    required: false
  TRACKJS_TOKEN:
    description: 'TrackJS token'
    required: false
  REMOTE_CONFIG_URL:
    description: 'Remote config URL'
    required: true
  # TRUSTPILOT_API_KEY:
  #   description: 'Trustpilot api key'
  #   required: false

runs:
  using: composite
  steps:
  - name: Build all packages
    env:
      NODE_ENV: ${{ inputs.NODE_ENV }}
      # DATADOG_APPLICATION_ID: ${{ inputs.DATADOG_APPLICATION_ID }}
      # DATADOG_CLIENT_TOKEN: ${{ inputs.DATADOG_CLIENT_TOKEN }}
      # DATADOG_CLIENT_TOKEN_LOGS: ${{ inputs.DATADOG_CLIENT_TOKEN_LOGS }}
      # DATADOG_SESSION_REPLAY_SAMPLE_RATE: ${{ inputs.DATADOG_SESSION_REPLAY_SAMPLE_RATE }}
      # DATADOG_SESSION_SAMPLE_RATE: ${{ inputs.DATADOG_SESSION_SAMPLE_RATE }}
      # DATADOG_SESSION_SAMPLE_RATE_LOGS: ${{ inputs.DATADOG_SESSION_SAMPLE_RATE_LOGS }}
      TRACKJS_TOKEN: ${{ inputs.TRACKJS_TOKEN }}
      RUDDERSTACK_KEY: ${{ inputs.RUDDERSTACK_KEY }}
      REF_NAME: ${{ inputs.REF_NAME }}
      REMOTE_CONFIG_URL: ${{ inputs.REMOTE_CONFIG_URL }}
      # TRUSTPILOT_API_KEY: ${{ inputs.TRUSTPILOT_API_KEY }}
      R2_PROJECT_NAME: ${{ inputs.R2_PROJECT_NAME }}
      CROWDIN_BRANCH_NAME: ${{ inputs.CROWDIN_BRANCH_NAME }}
    run: npm run build:all
    shell: bash
